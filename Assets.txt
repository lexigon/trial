library(quantmod)
library(textclean)
library(kernlab)
library(fitdistrplus)
library(rpart)


sreturns <- function(s1, NTD, ft11) {

}


sreturnsred <- function(s1, NTD, ft11) {

}



sreturnsreds <- function(s1, NTD, ft11) {

}





pp <- 14
lw <- 38*26 
sw <- 17*26 

W <- 60*26     #Number of data-items needed to make selection of assets that have potential to increase.
P <- L1 <- 58*26    #Number of data-items needed for a trading strategy for a chosen asset.
tw <- 26*5*4*3
st1 <- 39890
ft1 <- 46500




#Read in all data.
xxyx <- list.files(path = "E:\\BrowserTor\\Rmarkets\\trial\\Enhansed data\\data\\market_data")
SymbolsAll <- tools::file_path_sans_ext(xxyx)
for (u in SymbolsAll) {
assign(u,as.xts(read.zoo(paste('E:\\BrowserTor\\Rmarkets\\trial\\Enhansed data\\data\\market_data\\', u,'.csv', sep = ''),sep=",",header=TRUE)))
}


####Define some parameters.
W <- 36*26

#tw <- 25*26
P <- L1 <- 19*26
P <- 11*26
#P <- 22*26
#lw <- 20*26
lw <- 19*26
sw <- 14*26
Wl <- 15*26
Ws <- 7*26
W121 <- 620*26    #we need EPS data over almost 2.5 years period.
W111 <- 252*26
####

#Read in EPS data.
xxyxy <- list.files(path = "E:\\BrowserTor\\Rmarkets\\trial\\Enhansed data\\data\\eps_data\\")
SymbolsAlll <- tools::file_path_sans_ext(xxyxy)

ass <- function(s1) {assign(paste(s1, 'fd', sep = ''), read.csv(paste('E:\\BrowserTor\\Rmarkets\\trial\\Enhansed data\\data\\eps_data\\', paste(s1,'.csv', sep = ''), sep = ''), sep = ',', header = TRUE))

xx1 <- eval(parse(text = paste(s1, 'fd', sep = '')))
xx11 <- xx1$Announcement.Date
xx11 <- as.POSIXct(xx11)
xx111 <- xts(x = xx1$Earnings.EPS, order.by = xx11)
colnames(xx111) <- "Earnings.EPS"
assign(paste(s1, 'fd', sep = ''), xx111)
}

suppressWarnings(for (s1 in SymbolsAll) {
  tryCatch(assign(paste(s1, 'fd', sep = ''), ass(s1))
, error = function(e) FALSE)
})


tw <- 1630


numberofvariables <- 9

getSymbolsU1 <- function(date_number, period_on_market) {

}

numberofvariables <- 9

treed <- function(s, date_number) {
}


numberofvariables1 <- numberofvariables-1

treed1 <- function(s, date_number) {
}





########################################################################################
##########################################################################################
###########################################################################################

Frame <- as.xts(read.zoo("Frame.csv",sep=",",header=TRUE))  #This is a data frame filled with 0s. Column names are tickers. Index is given by 15 min data from 2010-01 to 2018-02.

PerfIndex <- index(Frame)   #Data item no 51000 is given by PerfIndex[51000].

VVVW <- vector(mode= "character", length = 0)   #Empty vector that will be used as a storage for portfolio information.
VVW1 <- vector(mode = "character", length = 0)

#Here i ranges over {0, 1, 2, 3}, each number corresponds to a quarter.

for (i in 0:( (ft1-st1-W)/tw) ) {


pp11 <- 8   #We use data with a step pp11 = 8.
w1 <- 67
P <- 45*26

xx111 <- data.frame(x = 1:5000)
for (s in SymbolsAll) {xx111 <- cbind(s = rep(0,5000), xx111)}
xx111$x <- NULL
colnames(xx111) <- SymbolsAll

yy111 <- data.frame(x = 1:5000)
for (s in SymbolsAll) {yy111 <- cbind(s = c(2, rep(0,4999)), yy111)}
yy111$x <- NULL
colnames(yy111) <- SymbolsAll



#Here m ranges over all data, day by day within a given quarter.

for (m in 1:floor(tw/pp11)) {

pp1112 <- 26

if (m == 1) {
#####################################################

z <- 0
date_number <- st1+1+i*tw+1*pp11
date_number1 <- st1+1+i*tw+1*pp11


xx1 <- data.frame(x = 1:numberofvariables)
rownames(xx1) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps", "Answ")

SymbolsU101 <- getSymbolsU1(date_number = date_number-tw+20*26+100, 20*26+100+tw+4*20*26)


SymbolsU101A <- " "
for (j1 in SymbolsU101) {
bb1 <- sreturns(j1, NTD = 220, date_number-tw)
if ( (strsplit(toString(as.POSIXct(format(PerfIndex[date_number-tw], "%Y-%m-%d"))), "-")[[1]][2] == strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2] && strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][3] <= strsplit(toString(as.POSIXct(format(PerfIndex[date_number-tw], "%Y-%m-%d"))), "-")[[1]][3]) | (as.numeric((strsplit(toString(as.POSIXct(format(PerfIndex[date_number-tw], "%Y-%m-%d"))), "-")[[1]][2])) - 1 == as.numeric(strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2])) ) {
SymbolsU101A <- append(SymbolsU101A, j1) }
}

SymbolsU101 <- SymbolsU101A[SymbolsU101A != " "]

for (s in SymbolsU101) {
xx1 <- cbind(xx1, treed(s, date_number-tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


SymbolsU102 <- getSymbolsU1(date_number = date_number-2*tw+20*26+100, 20*26+100+tw+4*20*26)

SymbolsU102A <- " "
for (j1 in SymbolsU102) {
bb1 <- sreturns(j1, NTD = 220, date_number-2*tw)
if ( (strsplit(toString(as.POSIXct(format(PerfIndex[date_number-2*tw], "%Y-%m-%d"))), "-")[[1]][2] == strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2] && strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][3] <= strsplit(toString(as.POSIXct(format(PerfIndex[date_number-2*tw], "%Y-%m-%d"))), "-")[[1]][3]) | (as.numeric((strsplit(toString(as.POSIXct(format(PerfIndex[date_number-2*tw], "%Y-%m-%d"))), "-")[[1]][2])) - 1 == as.numeric(strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2])) ) {
SymbolsU102A <- append(SymbolsU102A, j1) }
}

SymbolsU102 <- SymbolsU102A[SymbolsU102A != " "]

for (s in SymbolsU102) {
xx1 <- cbind(xx1, treed(s, date_number-2*tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


xx1$x <- NULL

trset <- xx1
trset <- t(trset)

yy17 <- data.frame(x = 1:numberofvariables1)
rownames(yy17) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps")

SymbolsU103 <- getSymbolsU1(date_number = date_number, tw+4*20*26)

SymbolsU103A <- " "
for (j1 in SymbolsU103) {
bb1 <- sreturns(j1, NTD = 220, date_number)
if ( (strsplit(toString(as.POSIXct(format(PerfIndex[date_number], "%Y-%m-%d"))), "-")[[1]][2] == strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2] && strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][3] <= strsplit(toString(as.POSIXct(format(PerfIndex[date_number], "%Y-%m-%d"))), "-")[[1]][3]) | (as.numeric((strsplit(toString(as.POSIXct(format(PerfIndex[date_number], "%Y-%m-%d"))), "-")[[1]][2])) - 1 == as.numeric(strsplit(toString(as.POSIXct(format(index(bb1)[nrow(bb1)], "%Y-%m-%d"))), "-")[[1]][2])) ) {
SymbolsU103A <- append(SymbolsU103A, j1) }
}

SymbolsU103 <- SymbolsU103A[SymbolsU103A != " "]

for (s3 in SymbolsU103) {
yy17 <- cbind(yy17, treed1(s3, date_number))
colnames(yy17)[length(colnames(yy17))] <- s3
}

yy17$x <- NULL
yy17 <- t(yy17)
testset <- yy17


rpart.model <- rpart(Answ ~ ., data = as.data.frame(trset))
rpart.pred <- predict(rpart.model, as.data.frame(testset))
xdist <- fitdist(exp(as.numeric(unclass(rpart.pred))), "gamma")
quntileestimate <- quantile(xdist, probs = c(0.1, 0.9, 0.85, 0.8))
mi <- log(as.numeric(quntileestimate$quantiles[2]))
mi1 <- log(as.numeric(quntileestimate$quantiles[3]))
mi2 <- log(as.numeric(quntileestimate$quantiles[4]))
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi2) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
fun <- ksvm(factor(Answ) ~ ., data = trset, type = "C-bsvc", kernel = "rbfdot", sigma = 0.001, C = 430)
func <- predict(fun, testset)
ind <- vector(length = length(func))
for (j in 1:length(func)) {if (as.numeric(func[j]) > 15) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > 0.95*max(rpart.pred)) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

if (length(SymbolsUUU1) <= 1) {

ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

}

s19 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+pp11])$hour == 16) {s19 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+pp11])$hour == 09) {s19 <- 4*18}

s20 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*pp11-1])$hour == 16) {s20 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*pp11-1])$hour == 09) {s20 <- 4*18}

for (ww in SymbolsUUU1) {
VVVW <- append(VVVW, paste(PerfIndex[st1+1+i*tw+1*pp11-s19], PerfIndex[st1+1+i*tw+w1*pp11-1-s20], ww, sep = ";"))
}} else {
if ( m == w1 ) {

z <- 1

date_number1 <- st1+1+i*tw+w1*pp11

date_number <- st1+1+i*tw+1*pp11

xx1 <- data.frame(x = 1:numberofvariables)
rownames(xx1) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps", "Answ")

SymbolsU101 <- getSymbolsU1(date_number = date_number1-tw+20*26+100, 20*26+100+tw+4*20*26)
SymbolsU102 <- getSymbolsU1(date_number = date_number1-2*tw+20*26+100, 20*26+100+tw+4*20*26)
SymbolsU103 <- getSymbolsU1(date_number = date_number1, tw+4*20*26)

##########


for (s in SymbolsU101) {
xx1 <- cbind(xx1, treed(s, date_number1-tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


for (s in SymbolsU102) {
xx1 <- cbind(xx1, treed(s, date_number1-2*tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


xx1$x <- NULL

trset <- xx1
trset <- t(trset)


yy17 <- data.frame(x = 1:numberofvariables1)
rownames(yy17) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps")


for (s3 in SymbolsU103) {
yy17 <- cbind(yy17, treed1(s3, date_number1))
colnames(yy17)[length(colnames(yy17))] <- s3
}

yy17$x <- NULL
yy17 <- t(yy17)
testset <- yy17


rpart.model <- rpart(Answ ~ ., data = as.data.frame(trset))
rpart.pred <- predict(rpart.model, as.data.frame(testset))
xdist <- fitdist(exp(as.numeric(unclass(rpart.pred))), "gamma")
quntileestimate <- quantile(xdist, probs = c(0.1, 0.9, 0.85, 0.8))
mi <- log(as.numeric(quntileestimate$quantiles[2]))
mi1 <- log(as.numeric(quntileestimate$quantiles[3]))
mi2 <- log(as.numeric(quntileestimate$quantiles[4]))
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi2) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
fun <- ksvm(factor(Answ) ~ ., data = trset, type = "C-bsvc", kernel = "rbfdot", sigma = 0.001, C = 430)
func <- predict(fun, testset)
ind <- vector(length = length(func))
for (j in 1:length(func)) {if (as.numeric(func[j]) > 15) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > 0.95*max(rpart.pred)) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

if (length(SymbolsUUU1) <= 1) {

ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

}

s19 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*pp11])$hour == 16) {s19 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*pp11])$hour == 09) {s19 <- 4*18}

s20 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*2*pp11-1])$hour == 16) {s20 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+w1*2*pp11-1])$hour == 09) {s20 <- 4*18}

for (ww in SymbolsUUU1) {
VVVW <- append(VVVW, paste(PerfIndex[st1+1+i*tw+w1*pp11-s19], PerfIndex[st1+1+i*tw+w1*2*pp11-1-s20], ww, sep = ";"))
}} else {

if ( m == w1*2) {
z <- 2
date_number1 <- st1+1+i*tw+w1*2*pp11
date_number <- st1+1+i*tw+w1*pp11

#########################################################

xx1 <- data.frame(x = 1:numberofvariables)
rownames(xx1) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps", "Answ")

SymbolsU101 <- getSymbolsU1(date_number = date_number1-tw+20*26+100, 20*26+100+tw+4*20*26)
SymbolsU102 <- getSymbolsU1(date_number = date_number1-2*tw+20*26+100, 20*26+100+tw+4*20*26)
SymbolsU103 <- getSymbolsU1(date_number = date_number1, tw+4*20*26)


for (s in SymbolsU101) {
xx1 <- cbind(xx1, treed(s, date_number1-tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


for (s in SymbolsU102) {
xx1 <- cbind(xx1, treed(s, date_number1-2*tw))
colnames(xx1)[length(colnames(xx1))] <- s
}


xx1$x <- NULL

trset <- xx1
trset <- t(trset)


yy17 <- data.frame(x = 1:numberofvariables1)
rownames(yy17) <- c("Summ1", "Summ2", "Summ3", "Summ3pr", "RcntGrad", "Cat", "Summ3sh", "Eps")


for (s3 in SymbolsU103) {
yy17 <- cbind(yy17, treed1(s3, date_number1))
colnames(yy17)[length(colnames(yy17))] <- s3
}

yy17$x <- NULL
yy17 <- t(yy17)
testset <- yy17


rpart.model <- rpart(Answ ~ ., data = as.data.frame(trset))
rpart.pred <- predict(rpart.model, as.data.frame(testset))
xdist <- fitdist(exp(as.numeric(unclass(rpart.pred))), "gamma")
quntileestimate <- quantile(xdist, probs = c(0.1, 0.9, 0.85, 0.8))
mi <- log(as.numeric(quntileestimate$quantiles[2]))
mi1 <- log(as.numeric(quntileestimate$quantiles[3]))
mi2 <- log(as.numeric(quntileestimate$quantiles[4]))
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi2) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
fun <- ksvm(factor(Answ) ~ ., data = trset, type = "C-bsvc", kernel = "rbfdot", sigma = 0.001, C = 430)
func <- predict(fun, testset)
ind <- vector(length = length(func))
for (j in 1:length(func)) {if (as.numeric(func[j]) > 15) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) == 0) {
ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > 0.95*max(rpart.pred)) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]
}

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

if (length(SymbolsUUU1) <= 1) {

ind <- vector(length = length(rpart.pred))
for (j in 1:length(rpart.pred)) {if (as.numeric(rpart.pred[j]) > mi1) {ind[j] <- TRUE} else {ind[j] <- FALSE}}
testset <- as.data.frame(testset)
testset1 <- testset[rownames(testset)[ind],]

if (nrow(testset1) >= 1) {
mm1 <- min(testset1[,"Cat"])
}

ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if ( (testset1[j,"Summ2"] >= 0 | testset1[j,"Summ3"] >= 0 | testset1[j,"Summ1"] >= 0 | testset1[j,"Summ3sh"] >= 0 | testset1[j,"Summ3pr"] >= 0) && (testset1[j,"Cat"] == mm1+1) && (testset1[j,"Eps"] >= 0) ) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


if (length(SymbolsUUU1) == 0) {

ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU1 <- ind

if (length(SymbolsUUU1) <= 1) {
ind <- " "
for (j in 1:nrow(testset1)) {if (testset1[j,"Cat"] == mm1+1) {ind <- append(row.names(testset1)[j], ind)}}
ind <- ind[ind != " "]

SymbolsUUU12 <- ind
SymbolsUUU1 <- append(SymbolsUUU1, SymbolsUUU12)
SymbolsUUU1 <- SymbolsUUU1[SymbolsUUU1 != " "]
}


}

}

s19 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+2*w1*pp11])$hour == 16) {s19 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+2*w1*pp11])$hour == 09) {s19 <- 4*18}

s20 <- 0
if (as.POSIXlt(PerfIndex[st1+1+i*tw+floor(tw/pp11)*pp11-1])$hour == 16) {s20 <- 4}
if (as.POSIXlt(PerfIndex[st1+1+i*tw+floor(tw/pp11)*pp11-1])$hour == 09) {s20 <- 4*18}


for (ww in SymbolsUUU1) {
VVVW <- append(VVVW, paste(PerfIndex[st1+1+i*tw+w1*2*pp11-s19], PerfIndex[st1+1+i*tw+floor(tw/pp11)*pp11-1-s20], ww, sep = ";"))
}}
}
}




if (m >= 0 && m < w1) {z <- 0} else {
if (m >= w1 && m < w1*2) {z <- 1} else {
if (m >= w1*2) {z <- 2}
}
}
}
}